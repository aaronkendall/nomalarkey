{
  "{\"sourceRoot\":\"/Users/aaronkendall/Projects/nomalarkey/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/aaronkendall/Projects/nomalarkey\",\"filename\":\"/Users/aaronkendall/Projects/nomalarkey/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/aaronkendall/Projects/nomalarkey\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/aaronkendall/Projects/nomalarkey/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/aaronkendall/Projects/nomalarkey",
      "filename": "/Users/aaronkendall/Projects/nomalarkey/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/aaronkendall/Projects/nomalarkey",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/aaronkendall/Projects/nomalarkey/src/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/aaronkendall/Projects/nomalarkey/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/aaronkendall/Projects/nomalarkey/src/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "import dotenv from 'dotenv';\nimport Twitter from 'twitter';\ndotenv.config();\nconst {\n  ACCESS_TOKEN,\n  ACCESS_TOKEN_SECRET,\n  API_KEY,\n  API_SECRET_KEY\n} = process.env;\nconst client = new Twitter({\n  consumer_key: API_KEY,\n  consumer_secret: API_SECRET_KEY,\n  access_token_key: ACCESS_TOKEN,\n  access_token_secret: ACCESS_TOKEN_SECRET\n});\nconst stream = client.stream('statuses/filter', {\n  track: 'malarkey'\n});\nstream.on('data', event => {\n  console.log(event);\n});\nstream.on('error', error => {\n  console.log('GOT AN ERROR', error);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRvdGVudiIsIlR3aXR0ZXIiLCJjb25maWciLCJBQ0NFU1NfVE9LRU4iLCJBQ0NFU1NfVE9LRU5fU0VDUkVUIiwiQVBJX0tFWSIsIkFQSV9TRUNSRVRfS0VZIiwicHJvY2VzcyIsImVudiIsImNsaWVudCIsImNvbnN1bWVyX2tleSIsImNvbnN1bWVyX3NlY3JldCIsImFjY2Vzc190b2tlbl9rZXkiLCJhY2Nlc3NfdG9rZW5fc2VjcmV0Iiwic3RyZWFtIiwidHJhY2siLCJvbiIsImV2ZW50IiwiY29uc29sZSIsImxvZyIsImVycm9yIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxNQUFQLE1BQW1CLFFBQW5CO0FBQ0EsT0FBT0MsT0FBUCxNQUFvQixTQUFwQjtBQUVBRCxNQUFNLENBQUNFLE1BQVA7QUFDQSxNQUFNO0FBQUVDLEVBQUFBLFlBQUY7QUFBZ0JDLEVBQUFBLG1CQUFoQjtBQUFxQ0MsRUFBQUEsT0FBckM7QUFBOENDLEVBQUFBO0FBQTlDLElBQWlFQyxPQUFPLENBQUNDLEdBQS9FO0FBQ0EsTUFBTUMsTUFBTSxHQUFHLElBQUlSLE9BQUosQ0FBWTtBQUN2QlMsRUFBQUEsWUFBWSxFQUFFTCxPQURTO0FBRXZCTSxFQUFBQSxlQUFlLEVBQUVMLGNBRk07QUFHdkJNLEVBQUFBLGdCQUFnQixFQUFFVCxZQUhLO0FBSXZCVSxFQUFBQSxtQkFBbUIsRUFBRVQ7QUFKRSxDQUFaLENBQWY7QUFPQSxNQUFNVSxNQUFNLEdBQUdMLE1BQU0sQ0FBQ0ssTUFBUCxDQUFjLGlCQUFkLEVBQWlDO0FBQUVDLEVBQUFBLEtBQUssRUFBRTtBQUFULENBQWpDLENBQWY7QUFDQUQsTUFBTSxDQUFDRSxFQUFQLENBQVUsTUFBVixFQUFrQkMsS0FBSyxJQUFJO0FBQ3ZCQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsS0FBWjtBQUNILENBRkQ7QUFJQUgsTUFBTSxDQUFDRSxFQUFQLENBQVUsT0FBVixFQUFtQkksS0FBSyxJQUFJO0FBQ3hCRixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxjQUFaLEVBQTRCQyxLQUE1QjtBQUNILENBRkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2Fhcm9ua2VuZGFsbC9Qcm9qZWN0cy9ub21hbGFya2V5L3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZG90ZW52IGZyb20gJ2RvdGVudidcbmltcG9ydCBUd2l0dGVyIGZyb20gJ3R3aXR0ZXInXG5cbmRvdGVudi5jb25maWcoKVxuY29uc3QgeyBBQ0NFU1NfVE9LRU4sIEFDQ0VTU19UT0tFTl9TRUNSRVQsIEFQSV9LRVksIEFQSV9TRUNSRVRfS0VZIH0gPSBwcm9jZXNzLmVudlxuY29uc3QgY2xpZW50ID0gbmV3IFR3aXR0ZXIoe1xuICAgIGNvbnN1bWVyX2tleTogQVBJX0tFWSxcbiAgICBjb25zdW1lcl9zZWNyZXQ6IEFQSV9TRUNSRVRfS0VZLFxuICAgIGFjY2Vzc190b2tlbl9rZXk6IEFDQ0VTU19UT0tFTixcbiAgICBhY2Nlc3NfdG9rZW5fc2VjcmV0OiBBQ0NFU1NfVE9LRU5fU0VDUkVUXG59KVxuXG5jb25zdCBzdHJlYW0gPSBjbGllbnQuc3RyZWFtKCdzdGF0dXNlcy9maWx0ZXInLCB7IHRyYWNrOiAnbWFsYXJrZXknIH0pXG5zdHJlYW0ub24oJ2RhdGEnLCBldmVudCA9PiB7XG4gICAgY29uc29sZS5sb2coZXZlbnQpXG59KVxuXG5zdHJlYW0ub24oJ2Vycm9yJywgZXJyb3IgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdHT1QgQU4gRVJST1InLCBlcnJvcilcbn0pXG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "dotenv",
        "Twitter",
        "config",
        "ACCESS_TOKEN",
        "ACCESS_TOKEN_SECRET",
        "API_KEY",
        "API_SECRET_KEY",
        "process",
        "env",
        "client",
        "consumer_key",
        "consumer_secret",
        "access_token_key",
        "access_token_secret",
        "stream",
        "track",
        "on",
        "event",
        "console",
        "log",
        "error"
      ],
      "mappings": "AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEAD,MAAM,CAACE,MAAP;AACA,MAAM;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,mBAAhB;AAAqCC,EAAAA,OAArC;AAA8CC,EAAAA;AAA9C,IAAiEC,OAAO,CAACC,GAA/E;AACA,MAAMC,MAAM,GAAG,IAAIR,OAAJ,CAAY;AACvBS,EAAAA,YAAY,EAAEL,OADS;AAEvBM,EAAAA,eAAe,EAAEL,cAFM;AAGvBM,EAAAA,gBAAgB,EAAET,YAHK;AAIvBU,EAAAA,mBAAmB,EAAET;AAJE,CAAZ,CAAf;AAOA,MAAMU,MAAM,GAAGL,MAAM,CAACK,MAAP,CAAc,iBAAd,EAAiC;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAjC,CAAf;AACAD,MAAM,CAACE,EAAP,CAAU,MAAV,EAAkBC,KAAK,IAAI;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,CAFD;AAIAH,MAAM,CAACE,EAAP,CAAU,OAAV,EAAmBI,KAAK,IAAI;AACxBF,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BC,KAA5B;AACH,CAFD",
      "sourceRoot": "/Users/aaronkendall/Projects/nomalarkey/src/",
      "sourcesContent": [
        "import dotenv from 'dotenv'\nimport Twitter from 'twitter'\n\ndotenv.config()\nconst { ACCESS_TOKEN, ACCESS_TOKEN_SECRET, API_KEY, API_SECRET_KEY } = process.env\nconst client = new Twitter({\n    consumer_key: API_KEY,\n    consumer_secret: API_SECRET_KEY,\n    access_token_key: ACCESS_TOKEN,\n    access_token_secret: ACCESS_TOKEN_SECRET\n})\n\nconst stream = client.stream('statuses/filter', { track: 'malarkey' })\nstream.on('data', event => {\n    console.log(event)\n})\n\nstream.on('error', error => {\n    console.log('GOT AN ERROR', error)\n})\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1585137406666
  },
  "{\"sourceRoot\":\"/Users/aaronkendall/Projects/nomalarkey/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/aaronkendall/Projects/nomalarkey\",\"filename\":\"/Users/aaronkendall/Projects/nomalarkey/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/aaronkendall/Projects/nomalarkey\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/aaronkendall/Projects/nomalarkey/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/aaronkendall/Projects/nomalarkey",
      "filename": "/Users/aaronkendall/Projects/nomalarkey/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/aaronkendall/Projects/nomalarkey",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/aaronkendall/Projects/nomalarkey/src/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/aaronkendall/Projects/nomalarkey/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/aaronkendall/Projects/nomalarkey/src/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _twitter = _interopRequireDefault(require(\"twitter\"));\n\nvar _fp = _interopRequireDefault(require(\"lodash/fp\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _responses = _interopRequireDefault(require(\"./responses\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar conforms = _fp[\"default\"].conforms,\n    isString = _fp[\"default\"].isString,\n    get = _fp[\"default\"].get,\n    random = _fp[\"default\"].random;\n\n_dotenv[\"default\"].config();\n\nvar _process$env = process.env,\n    ACCESS_TOKEN = _process$env.ACCESS_TOKEN,\n    ACCESS_TOKEN_SECRET = _process$env.ACCESS_TOKEN_SECRET,\n    API_KEY = _process$env.API_KEY,\n    API_SECRET_KEY = _process$env.API_SECRET_KEY;\nvar client = new _twitter[\"default\"]({\n  consumer_key: API_KEY,\n  consumer_secret: API_SECRET_KEY,\n  access_token_key: ACCESS_TOKEN,\n  access_token_secret: ACCESS_TOKEN_SECRET\n});\nvar isTweet = conforms({\n  id_str: isString,\n  text: isString\n});\n\nvar getRandomResponse = function getRandomResponse() {\n  return _responses[\"default\"][random(0, _responses[\"default\"].length - 1)];\n};\n\nvar tweetCount = 0;\nvar lastTweetSentTime = '';\nvar SELF_SCREEN_NAME = 'no_malarkey_joe';\nvar MINS_PER_TWEET = 5;\nvar stream = client.stream('statuses/filter', {\n  track: 'malarkey,malarky'\n});\nstream.on('data', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(event) {\n    var tweetId, user, allowTweet, reply, timeSinceLastTweet;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!isTweet(event)) {\n              _context.next = 20;\n              break;\n            }\n\n            tweetId = get('id_str', event);\n            user = get('user.screen_name', event);\n            allowTweet = (0, _moment[\"default\"])(Date.now()).isAfter((0, _moment[\"default\"])(lastTweetSentTime).add(MINS_PER_TWEET, 'minutes'));\n\n            if (!(user === SELF_SCREEN_NAME)) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 6:\n            if (!get('retweeted_status.id_str', event)) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 8:\n            if (!(lastTweetSentTime && !allowTweet)) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 10:\n            _context.prev = 10;\n            _context.next = 13;\n            return client.post('statuses/update', {\n              in_reply_to_status_id: tweetId,\n              auto_populate_reply_metadata: true,\n              status: \"Hey kid, @\".concat(user, \", \").concat(getRandomResponse())\n            });\n\n          case 13:\n            reply = _context.sent;\n\n            if (get('id', reply)) {\n              timeSinceLastTweet = (0, _moment[\"default\"])(Date.now()).diff((0, _moment[\"default\"])(lastTweetSentTime), 'minutes');\n              tweetCount++;\n              lastTweetSentTime = (0, _moment[\"default\"])(Date.now());\n              console.log('Sent a malarkey tweet, total tweets sent: ', tweetCount, ' Mins since last tweet: ', timeSinceLastTweet);\n            }\n\n            _context.next = 20;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](10);\n            console.log('error sending tweet', _context.t0);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[10, 17]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\nstream.on('error', function (error) {\n  console.log('GOT AN ERROR', error);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvbmZvcm1zIiwiXyIsImlzU3RyaW5nIiwiZ2V0IiwicmFuZG9tIiwiZG90ZW52IiwiY29uZmlnIiwicHJvY2VzcyIsImVudiIsIkFDQ0VTU19UT0tFTiIsIkFDQ0VTU19UT0tFTl9TRUNSRVQiLCJBUElfS0VZIiwiQVBJX1NFQ1JFVF9LRVkiLCJjbGllbnQiLCJUd2l0dGVyIiwiY29uc3VtZXJfa2V5IiwiY29uc3VtZXJfc2VjcmV0IiwiYWNjZXNzX3Rva2VuX2tleSIsImFjY2Vzc190b2tlbl9zZWNyZXQiLCJpc1R3ZWV0IiwiaWRfc3RyIiwidGV4dCIsImdldFJhbmRvbVJlc3BvbnNlIiwicmVzcG9uc2VzIiwibGVuZ3RoIiwidHdlZXRDb3VudCIsImxhc3RUd2VldFNlbnRUaW1lIiwiU0VMRl9TQ1JFRU5fTkFNRSIsIk1JTlNfUEVSX1RXRUVUIiwic3RyZWFtIiwidHJhY2siLCJvbiIsImV2ZW50IiwidHdlZXRJZCIsInVzZXIiLCJhbGxvd1R3ZWV0IiwiRGF0ZSIsIm5vdyIsImlzQWZ0ZXIiLCJhZGQiLCJwb3N0IiwiaW5fcmVwbHlfdG9fc3RhdHVzX2lkIiwiYXV0b19wb3B1bGF0ZV9yZXBseV9tZXRhZGF0YSIsInN0YXR1cyIsInJlcGx5IiwidGltZVNpbmNlTGFzdFR3ZWV0IiwiZGlmZiIsImNvbnNvbGUiLCJsb2ciLCJlcnJvciJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFJQTs7Ozs7Ozs7SUFIUUEsUSxHQUFvQ0MsYyxDQUFwQ0QsUTtJQUFVRSxRLEdBQTBCRCxjLENBQTFCQyxRO0lBQVVDLEcsR0FBZ0JGLGMsQ0FBaEJFLEc7SUFBS0MsTSxHQUFXSCxjLENBQVhHLE07O0FBQ2pDQyxtQkFBT0MsTUFBUDs7bUJBSXVFQyxPQUFPLENBQUNDLEc7SUFBdkVDLFksZ0JBQUFBLFk7SUFBY0MsbUIsZ0JBQUFBLG1CO0lBQXFCQyxPLGdCQUFBQSxPO0lBQVNDLGMsZ0JBQUFBLGM7QUFDcEQsSUFBTUMsTUFBTSxHQUFHLElBQUlDLG1CQUFKLENBQVk7QUFDdkJDLEVBQUFBLFlBQVksRUFBRUosT0FEUztBQUV2QkssRUFBQUEsZUFBZSxFQUFFSixjQUZNO0FBR3ZCSyxFQUFBQSxnQkFBZ0IsRUFBRVIsWUFISztBQUl2QlMsRUFBQUEsbUJBQW1CLEVBQUVSO0FBSkUsQ0FBWixDQUFmO0FBT0EsSUFBTVMsT0FBTyxHQUFHbkIsUUFBUSxDQUFDO0FBQ3JCb0IsRUFBQUEsTUFBTSxFQUFFbEIsUUFEYTtBQUVyQm1CLEVBQUFBLElBQUksRUFBRW5CO0FBRmUsQ0FBRCxDQUF4Qjs7QUFLQSxJQUFNb0IsaUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFvQjtBQUFBLFNBQU1DLHNCQUFVbkIsTUFBTSxDQUFDLENBQUQsRUFBSW1CLHNCQUFVQyxNQUFWLEdBQW1CLENBQXZCLENBQWhCLENBQU47QUFBQSxDQUExQjs7QUFFQSxJQUFJQyxVQUFVLEdBQUksQ0FBbEI7QUFDQSxJQUFJQyxpQkFBaUIsR0FBRyxFQUF4QjtBQUNBLElBQU1DLGdCQUFnQixHQUFHLGlCQUF6QjtBQUNBLElBQU1DLGNBQWMsR0FBRyxDQUF2QjtBQUVBLElBQU1DLE1BQU0sR0FBR2hCLE1BQU0sQ0FBQ2dCLE1BQVAsQ0FBYyxpQkFBZCxFQUFpQztBQUFFQyxFQUFBQSxLQUFLLEVBQUU7QUFBVCxDQUFqQyxDQUFmO0FBQ0FELE1BQU0sQ0FBQ0UsRUFBUCxDQUFVLE1BQVY7QUFBQSxxRUFBa0IsaUJBQU1DLEtBQU47QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsaUJBQ1ZiLE9BQU8sQ0FBQ2EsS0FBRCxDQURHO0FBQUE7QUFBQTtBQUFBOztBQUVKQyxZQUFBQSxPQUZJLEdBRU05QixHQUFHLENBQUMsUUFBRCxFQUFXNkIsS0FBWCxDQUZUO0FBR0pFLFlBQUFBLElBSEksR0FHRy9CLEdBQUcsQ0FBQyxrQkFBRCxFQUFxQjZCLEtBQXJCLENBSE47QUFJSkcsWUFBQUEsVUFKSSxHQUlTLHdCQUFPQyxJQUFJLENBQUNDLEdBQUwsRUFBUCxFQUFtQkMsT0FBbkIsQ0FDZix3QkFBT1osaUJBQVAsRUFBMEJhLEdBQTFCLENBQThCWCxjQUE5QixFQUE4QyxTQUE5QyxDQURlLENBSlQ7O0FBQUEsa0JBUU5NLElBQUksS0FBS1AsZ0JBUkg7QUFBQTtBQUFBO0FBQUE7O0FBQUE7O0FBQUE7QUFBQSxpQkFTTnhCLEdBQUcsQ0FBQyx5QkFBRCxFQUE0QjZCLEtBQTVCLENBVEc7QUFBQTtBQUFBO0FBQUE7O0FBQUE7O0FBQUE7QUFBQSxrQkFVTk4saUJBQWlCLElBQUksQ0FBQ1MsVUFWaEI7QUFBQTtBQUFBO0FBQUE7O0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBYWN0QixNQUFNLENBQUMyQixJQUFQLENBQVksaUJBQVosRUFBK0I7QUFDL0NDLGNBQUFBLHFCQUFxQixFQUFFUixPQUR3QjtBQUUvQ1MsY0FBQUEsNEJBQTRCLEVBQUUsSUFGaUI7QUFHL0NDLGNBQUFBLE1BQU0sc0JBQWVULElBQWYsZUFBd0JaLGlCQUFpQixFQUF6QztBQUh5QyxhQUEvQixDQWJkOztBQUFBO0FBYUFzQixZQUFBQSxLQWJBOztBQW1CTixnQkFBSXpDLEdBQUcsQ0FBQyxJQUFELEVBQU95QyxLQUFQLENBQVAsRUFBc0I7QUFDWkMsY0FBQUEsa0JBRFksR0FDUyx3QkFBT1QsSUFBSSxDQUFDQyxHQUFMLEVBQVAsRUFBbUJTLElBQW5CLENBQXdCLHdCQUFPcEIsaUJBQVAsQ0FBeEIsRUFBbUQsU0FBbkQsQ0FEVDtBQUVsQkQsY0FBQUEsVUFBVTtBQUNWQyxjQUFBQSxpQkFBaUIsR0FBRyx3QkFBT1UsSUFBSSxDQUFDQyxHQUFMLEVBQVAsQ0FBcEI7QUFDQVUsY0FBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksNENBQVosRUFBMER2QixVQUExRCxFQUFzRSwwQkFBdEUsRUFBa0dvQixrQkFBbEc7QUFDSDs7QUF4Qks7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUEwQk5FLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHFCQUFaOztBQTFCTTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFsQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQStCQW5CLE1BQU0sQ0FBQ0UsRUFBUCxDQUFVLE9BQVYsRUFBbUIsVUFBQWtCLEtBQUssRUFBSTtBQUN4QkYsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksY0FBWixFQUE0QkMsS0FBNUI7QUFDSCxDQUZEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9hYXJvbmtlbmRhbGwvUHJvamVjdHMvbm9tYWxhcmtleS9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRvdGVudiBmcm9tICdkb3RlbnYnXG5pbXBvcnQgVHdpdHRlciBmcm9tICd0d2l0dGVyJ1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoL2ZwJ1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5jb25zdCB7IGNvbmZvcm1zLCBpc1N0cmluZywgZ2V0LCByYW5kb20gfSA9IF9cbmRvdGVudi5jb25maWcoKVxuXG5pbXBvcnQgcmVzcG9uc2VzIGZyb20gJy4vcmVzcG9uc2VzJ1xuXG5jb25zdCB7IEFDQ0VTU19UT0tFTiwgQUNDRVNTX1RPS0VOX1NFQ1JFVCwgQVBJX0tFWSwgQVBJX1NFQ1JFVF9LRVkgfSA9IHByb2Nlc3MuZW52XG5jb25zdCBjbGllbnQgPSBuZXcgVHdpdHRlcih7XG4gICAgY29uc3VtZXJfa2V5OiBBUElfS0VZLFxuICAgIGNvbnN1bWVyX3NlY3JldDogQVBJX1NFQ1JFVF9LRVksXG4gICAgYWNjZXNzX3Rva2VuX2tleTogQUNDRVNTX1RPS0VOLFxuICAgIGFjY2Vzc190b2tlbl9zZWNyZXQ6IEFDQ0VTU19UT0tFTl9TRUNSRVRcbn0pXG5cbmNvbnN0IGlzVHdlZXQgPSBjb25mb3Jtcyh7XG4gICAgaWRfc3RyOiBpc1N0cmluZyxcbiAgICB0ZXh0OiBpc1N0cmluZyxcbn0pXG5cbmNvbnN0IGdldFJhbmRvbVJlc3BvbnNlID0gKCkgPT4gcmVzcG9uc2VzW3JhbmRvbSgwLCByZXNwb25zZXMubGVuZ3RoIC0gMSldXG5cbmxldCB0d2VldENvdW50ID0gIDBcbmxldCBsYXN0VHdlZXRTZW50VGltZSA9ICcnXG5jb25zdCBTRUxGX1NDUkVFTl9OQU1FID0gJ25vX21hbGFya2V5X2pvZSdcbmNvbnN0IE1JTlNfUEVSX1RXRUVUID0gNVxuXG5jb25zdCBzdHJlYW0gPSBjbGllbnQuc3RyZWFtKCdzdGF0dXNlcy9maWx0ZXInLCB7IHRyYWNrOiAnbWFsYXJrZXksbWFsYXJreScgfSlcbnN0cmVhbS5vbignZGF0YScsIGFzeW5jIGV2ZW50ID0+IHtcbiAgICBpZiAoaXNUd2VldChldmVudCkpIHtcbiAgICAgICAgY29uc3QgdHdlZXRJZCA9IGdldCgnaWRfc3RyJywgZXZlbnQpXG4gICAgICAgIGNvbnN0IHVzZXIgPSBnZXQoJ3VzZXIuc2NyZWVuX25hbWUnLCBldmVudClcbiAgICAgICAgY29uc3QgYWxsb3dUd2VldCA9IG1vbWVudChEYXRlLm5vdygpKS5pc0FmdGVyKFxuICAgICAgICAgICAgbW9tZW50KGxhc3RUd2VldFNlbnRUaW1lKS5hZGQoTUlOU19QRVJfVFdFRVQsICdtaW51dGVzJylcbiAgICAgICAgKVxuXG4gICAgICAgIGlmICh1c2VyID09PSBTRUxGX1NDUkVFTl9OQU1FKSByZXR1cm4gLy8gZG9udCByZXBseSB0byBvdXJzZWx2ZXNcbiAgICAgICAgaWYgKGdldCgncmV0d2VldGVkX3N0YXR1cy5pZF9zdHInLCBldmVudCkpIHJldHVybiAvLyBkb250IHJlcGx5IHRvIHJldHdlZXRzXG4gICAgICAgIGlmIChsYXN0VHdlZXRTZW50VGltZSAmJiAhYWxsb3dUd2VldCkgcmV0dXJuIC8vIG9ubHkgdHdlZXQgZXZlcnkgNSBtaW5zIG1heFxuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCByZXBseSA9IGF3YWl0IGNsaWVudC5wb3N0KCdzdGF0dXNlcy91cGRhdGUnLCB7XG4gICAgICAgICAgICAgICAgaW5fcmVwbHlfdG9fc3RhdHVzX2lkOiB0d2VldElkLFxuICAgICAgICAgICAgICAgIGF1dG9fcG9wdWxhdGVfcmVwbHlfbWV0YWRhdGE6IHRydWUsXG4gICAgICAgICAgICAgICAgc3RhdHVzOiBgSGV5IGtpZCwgQCR7dXNlcn0sICR7Z2V0UmFuZG9tUmVzcG9uc2UoKX1gXG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICBpZiAoZ2V0KCdpZCcsIHJlcGx5KSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRpbWVTaW5jZUxhc3RUd2VldCA9IG1vbWVudChEYXRlLm5vdygpKS5kaWZmKG1vbWVudChsYXN0VHdlZXRTZW50VGltZSksICdtaW51dGVzJylcbiAgICAgICAgICAgICAgICB0d2VldENvdW50KytcbiAgICAgICAgICAgICAgICBsYXN0VHdlZXRTZW50VGltZSA9IG1vbWVudChEYXRlLm5vdygpKVxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdTZW50IGEgbWFsYXJrZXkgdHdlZXQsIHRvdGFsIHR3ZWV0cyBzZW50OiAnLCB0d2VldENvdW50LCAnIE1pbnMgc2luY2UgbGFzdCB0d2VldDogJywgdGltZVNpbmNlTGFzdFR3ZWV0KVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2Vycm9yIHNlbmRpbmcgdHdlZXQnLCBlcnJvcilcbiAgICAgICAgfVxuICAgIH1cbn0pXG5cbnN0cmVhbS5vbignZXJyb3InLCBlcnJvciA9PiB7XG4gICAgY29uc29sZS5sb2coJ0dPVCBBTiBFUlJPUicsIGVycm9yKVxufSlcblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "conforms",
        "_",
        "isString",
        "get",
        "random",
        "dotenv",
        "config",
        "process",
        "env",
        "ACCESS_TOKEN",
        "ACCESS_TOKEN_SECRET",
        "API_KEY",
        "API_SECRET_KEY",
        "client",
        "Twitter",
        "consumer_key",
        "consumer_secret",
        "access_token_key",
        "access_token_secret",
        "isTweet",
        "id_str",
        "text",
        "getRandomResponse",
        "responses",
        "length",
        "tweetCount",
        "lastTweetSentTime",
        "SELF_SCREEN_NAME",
        "MINS_PER_TWEET",
        "stream",
        "track",
        "on",
        "event",
        "tweetId",
        "user",
        "allowTweet",
        "Date",
        "now",
        "isAfter",
        "add",
        "post",
        "in_reply_to_status_id",
        "auto_populate_reply_metadata",
        "status",
        "reply",
        "timeSinceLastTweet",
        "diff",
        "console",
        "log",
        "error"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/aaronkendall/Projects/nomalarkey/src/",
      "sourcesContent": [
        "import dotenv from 'dotenv'\nimport Twitter from 'twitter'\nimport _ from 'lodash/fp'\nimport moment from 'moment'\nconst { conforms, isString, get, random } = _\ndotenv.config()\n\nimport responses from './responses'\n\nconst { ACCESS_TOKEN, ACCESS_TOKEN_SECRET, API_KEY, API_SECRET_KEY } = process.env\nconst client = new Twitter({\n    consumer_key: API_KEY,\n    consumer_secret: API_SECRET_KEY,\n    access_token_key: ACCESS_TOKEN,\n    access_token_secret: ACCESS_TOKEN_SECRET\n})\n\nconst isTweet = conforms({\n    id_str: isString,\n    text: isString,\n})\n\nconst getRandomResponse = () => responses[random(0, responses.length - 1)]\n\nlet tweetCount =  0\nlet lastTweetSentTime = ''\nconst SELF_SCREEN_NAME = 'no_malarkey_joe'\nconst MINS_PER_TWEET = 5\n\nconst stream = client.stream('statuses/filter', { track: 'malarkey,malarky' })\nstream.on('data', async event => {\n    if (isTweet(event)) {\n        const tweetId = get('id_str', event)\n        const user = get('user.screen_name', event)\n        const allowTweet = moment(Date.now()).isAfter(\n            moment(lastTweetSentTime).add(MINS_PER_TWEET, 'minutes')\n        )\n\n        if (user === SELF_SCREEN_NAME) return // dont reply to ourselves\n        if (get('retweeted_status.id_str', event)) return // dont reply to retweets\n        if (lastTweetSentTime && !allowTweet) return // only tweet every 5 mins max\n\n        try {\n            const reply = await client.post('statuses/update', {\n                in_reply_to_status_id: tweetId,\n                auto_populate_reply_metadata: true,\n                status: `Hey kid, @${user}, ${getRandomResponse()}`\n            })\n\n            if (get('id', reply)) {\n                const timeSinceLastTweet = moment(Date.now()).diff(moment(lastTweetSentTime), 'minutes')\n                tweetCount++\n                lastTweetSentTime = moment(Date.now())\n                console.log('Sent a malarkey tweet, total tweets sent: ', tweetCount, ' Mins since last tweet: ', timeSinceLastTweet)\n            }\n        } catch (error) {\n            console.log('error sending tweet', error)\n        }\n    }\n})\n\nstream.on('error', error => {\n    console.log('GOT AN ERROR', error)\n})\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585145343270
  },
  "{\"sourceRoot\":\"/Users/aaronkendall/Projects/nomalarkey/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/aaronkendall/Projects/nomalarkey\",\"filename\":\"/Users/aaronkendall/Projects/nomalarkey/src/responses.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/aaronkendall/Projects/nomalarkey\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/aaronkendall/Projects/nomalarkey/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/aaronkendall/Projects/nomalarkey",
      "filename": "/Users/aaronkendall/Projects/nomalarkey/src/responses.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/aaronkendall/Projects/nomalarkey",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/aaronkendall/Projects/nomalarkey/src/responses.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/aaronkendall/Projects/nomalarkey/src/responses.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/aaronkendall/Projects/nomalarkey/src/",
        "sourceFileName": "responses.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _default = [\"please, refrain from the malarkey\", \"hi, my name is Joe, and I would kindly ask you to stop with the malarkey\", \"with malarkey, we only have chaos.\", \"I say NO to malarkey!\", \"I am drawing a line in the sand - the malarkey stops here!\", \"I didn't stand for malarkey with Corn Pop and I certainly will not stand for it now\"];\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc3BvbnNlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7ZUFBZSxDQUNYLG1DQURXLEVBRVgsMEVBRlcsRUFHWCxvQ0FIVyxFQUlYLHVCQUpXLEVBS1gsNERBTFcsRUFNWCxxRkFOVyxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9hYXJvbmtlbmRhbGwvUHJvamVjdHMvbm9tYWxhcmtleS9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgW1xuICAgIFwicGxlYXNlLCByZWZyYWluIGZyb20gdGhlIG1hbGFya2V5XCIsXG4gICAgXCJoaSwgbXkgbmFtZSBpcyBKb2UsIGFuZCBJIHdvdWxkIGtpbmRseSBhc2sgeW91IHRvIHN0b3Agd2l0aCB0aGUgbWFsYXJrZXlcIixcbiAgICBcIndpdGggbWFsYXJrZXksIHdlIG9ubHkgaGF2ZSBjaGFvcy5cIixcbiAgICBcIkkgc2F5IE5PIHRvIG1hbGFya2V5IVwiLFxuICAgIFwiSSBhbSBkcmF3aW5nIGEgbGluZSBpbiB0aGUgc2FuZCAtIHRoZSBtYWxhcmtleSBzdG9wcyBoZXJlIVwiLFxuICAgIFwiSSBkaWRuJ3Qgc3RhbmQgZm9yIG1hbGFya2V5IHdpdGggQ29ybiBQb3AgYW5kIEkgY2VydGFpbmx5IHdpbGwgbm90IHN0YW5kIGZvciBpdCBub3dcIixcbl0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "responses.js"
      ],
      "names": [],
      "mappings": ";;;;;;eAAe,CACX,mCADW,EAEX,0EAFW,EAGX,oCAHW,EAIX,uBAJW,EAKX,4DALW,EAMX,qFANW,C",
      "sourceRoot": "/Users/aaronkendall/Projects/nomalarkey/src/",
      "sourcesContent": [
        "export default [\n    \"please, refrain from the malarkey\",\n    \"hi, my name is Joe, and I would kindly ask you to stop with the malarkey\",\n    \"with malarkey, we only have chaos.\",\n    \"I say NO to malarkey!\",\n    \"I am drawing a line in the sand - the malarkey stops here!\",\n    \"I didn't stand for malarkey with Corn Pop and I certainly will not stand for it now\",\n]"
      ]
    },
    "sourceType": "script",
    "mtime": 1585151321481
  }
}